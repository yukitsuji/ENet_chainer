
stop_trigger: [90000, "iteration"]
# max_workspace_size: 256

"""
Blockの中身は基本いじらない
Bottleneckの構成を色々試してみる

typeでBlockまたはBottleneckを設定できる
Bottlenecで対応可能なparamは、Defaultのみ
"""

model:
  architecture:
    initial_block:
      type: initial
      args:
        in_ch: 3
        out_ch: 13
        ksize: 3
        stride: 2
        nobias: False

    bottleneck1_0:
      type: bottleneck1
      args:
        in_ch: 16
        mid_ch: 16
        out_ch: 64

    bottleneck1_1:
      type: bottleneck1
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64

    bottleneck2_0:
      type: bottleneck1
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64

    bottleneck1_1:
      type: bottleneck1
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64

    bottleneck1_1:
      type: bottleneck1
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64

    bottleneck1_1:
      type: bottleneck1
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64

    bottleneck1_1:
      type: bottleneck1
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64

    bottleneck1_1:
      type: bottleneck1
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64

    bottleneck1_1:
      type: bottleneck1
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64

    bottleneck1_1:
      type: bottleneck1
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64

    bottleneck1_1:
      type: bottleneck1
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64

    bottleneck1_1:
      type: bottleneck1
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64

    bottleneck1_1:
      type: bottleneck1
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64
  use_dec: False

model:
  module: pspnet
  name: PSPNet
  args:
    n_class: 19
    input_size: [713, 713]
    n_blocks: [3, 4, 23, 3]
    pyramids: [6, 3, 2, 1]
    mid_stride: true

dataset:
  train:
    module: datasets
    name: CityscapesTransformedDataset
    args:
      data_dir: data/cityscapes
      label_resolution: gtFine
      split: train
      ignore_labels: true
      crop_size: [713, 713]
      color_sigma: null
      scale: [0.5, 2.0]
      rotate: False
      fliplr: True
      n_class: 19
    batchsize: 1

  valid:
    module: dataset
    name: CityscapesTransformedDataset
    args:
      data_dir: data/cityscapes
      label_resolution: gtFine
      split: val
      ignore_labels: true
      crop_size: [713, 713]
      color_sigma: null
      scale: null
      rotate: False
      fliplr: False
      n_class: 19
    batchsize: 1

loss:
  module: loss.pspnet_loss
  name: PixelwiseSoftmaxClassifier
  args:
    ignore_label: -1
    class_weight_npy: dataset/cityscapes/class_weight_gtFine.npy

optimizer:
  method: MomentumSGD
  args:
    lr: 0.01
    momentum: 0.9
  weight_decay: 0.0001
  lr_drop_poly_power: 0.9
  # lr_drop_ratio: 0.1
  # lr_drop_triggers:
  #   points: [200, 400]
  #   unit: epoch

updater_creator:
    module: chainer.training
    name: StandardUpdater

trainer_extension:
  - LogReport:
      trigger: [1, "epoch"]
  - dump_graph:
      root_name: main/loss
      out_name: cg.dot
  - observe_lr:
      trigger: [1, "epoch"]
  - Evaluator:
      module: chainercv.extensions
      name: SemanticSegmentationEvaluator
      trigger: [1, "epoch"]
      prefix: val
  - PlotReport:
      y_keys:
        - main/loss
      x_key: epoch
      file_name: loss_epoch.png
      trigger: [1, "epoch"]
  - PlotReport:
      y_keys:
        - val/main/miou
      x_key: epoch
      file_name: val_miou_epoch.png
      trigger: [1, "epoch"]
  - PlotReport:
      y_keys:
        - val/main/pixel_accuracy
      x_key: epoch
      file_name: val_pixel_accuracy_epoch.png
      trigger: [1, "epoch"]
  - PlotReport:
      y_keys:
        - val/main/mean_class_accuracy
      x_key: epoch
      file_name: val_mean_class_accuracy_epoch.png
      trigger: [1, "epoch"]
  - PrintReport:
      entries:
        - epoch
        - iteration
        - main/loss
        - val/main/miou
        - val/main/pixel_accuracy
        - val/main/mean_class_accuracy
        - elapsed_time
        - lr
      trigger: [1, "epoch"]
  - ProgressBar:
      update_interval: 10
      trigger: [10, "iteration"]
  - snapshot:
      filename: trainer_{.updater.epoch}_epoch
      trigger: [10, "epoch"]
