# """
# Blockの中身は基本いじらない
# Bottleneckの構成を色々試してみる
#
# typeでBlockまたはBottleneckを設定できる
# Bottlenecで対応可能なparamは、Defaultのみ
# """
end_trigger: [90000, "iteration"]
results: results/sample
gpus: [0]
mode: Train
seed: 1

model:
  name: ENetBasic
  architecture:
    initial_block:
      type: InitialBlock
      args:
        in_ch: 3
        out_ch: 13
        ksize: 3
        stride: 2
        pad: 1
        nobias: False

    bottleneck1_0:
      type: Block
      args:
        in_ch: 16
        mid_ch: 16
        out_ch: 64
        downsample: True
        drop_ratio: 0.01

    bottleneck1_1:
      type: Block
      loop: 4
      args:
        in_ch: 64
        mid_ch: 16
        out_ch: 64
        drop_ratio: 0.01

    bottleneck2_0:
      type: Block
      args:
        in_ch: 64
        mid_ch: 32
        out_ch: 128
        downsample: 1

    bottleneck2_1:
      type: Bottleneck2
      loop: 2
      args:
        in_ch: 128
        mid_ch: 32
        out_ch: 128
        drop_ratio: 0.01

    fullconv:
      type: FullConv
      args:
        in_ch: 128
        out_ch: 19

dataset:
  train:
    module: enet.data_util.cityscapes.cityscapes_transformed
    name: CityscapesTransformedDataset
    args:
      data_dir: /home/yukitsuji/dataset/cityscapes
      label_resolution: gtFine
      split: train
      ignore_labels: true
      crop_size: [512, 1024]
      color_sigma: null
      scale: [0.5, 2.0]
      rotate: False
      fliplr: True
      n_class: 19
      scale_label: 8

  valid:
    module: enet.data_util.cityscapes.cityscapes_transformed
    name: CityscapesTransformedDataset
    args:
      data_dir: /home/yukitsuji/dataset/cityscapes
      label_resolution: gtFine
      split: val
      ignore_labels: true
      crop_size: [713, 713]
      color_sigma: null
      scale: null
      rotate: False
      fliplr: False
      n_class: 19

loss:
  module: loss.pspnet_loss
  name: PixelwiseSoftmaxClassifier
  args:
    ignore_label: -1
    class_weight_npy: dataset/cityscapes/class_weight_gtFine.npy

updater:
  name: StandardUpdater #ParallelUpdater

iterator:
  name: SerialIterator # MultiprocessIterator
  batchsize: 8

optimizer:
  name: MomentumSGD
  args:
    lr: 0.01
    momentum: 0.9
  hook:
    WeightDecay: 0.0002

extension:
  Evaluator:
    name: SemanticSegmentationEvaluator
  # dump_graph:
  #     name: main/loss
  snapshot:
      trigger: [2, "epoch"]
  LogReport:
    trigger: [1, "epoch"]
  PrintReport:
    name:
      epoch
      iteration
      main/loss
      main/accuracy
      val/main/loss
      val/main/accuracy
      # lr
    trigger: [1, "epoch"]
  ProgressBar:
      update_interval: 10
